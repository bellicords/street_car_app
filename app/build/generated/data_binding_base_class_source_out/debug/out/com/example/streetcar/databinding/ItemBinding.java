// Generated by view binder compiler. Do not edit!
package com.example.streetcar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.streetcar.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView ConsultData;

  @NonNull
  public final TextView ConsultHora;

  @NonNull
  public final TextView ConsultMarca;

  @NonNull
  public final TextView ConsultModelo;

  @NonNull
  public final TextView ConsultPlaca;

  private ItemBinding(@NonNull CardView rootView, @NonNull TextView ConsultData,
      @NonNull TextView ConsultHora, @NonNull TextView ConsultMarca,
      @NonNull TextView ConsultModelo, @NonNull TextView ConsultPlaca) {
    this.rootView = rootView;
    this.ConsultData = ConsultData;
    this.ConsultHora = ConsultHora;
    this.ConsultMarca = ConsultMarca;
    this.ConsultModelo = ConsultModelo;
    this.ConsultPlaca = ConsultPlaca;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ConsultData;
      TextView ConsultData = ViewBindings.findChildViewById(rootView, id);
      if (ConsultData == null) {
        break missingId;
      }

      id = R.id.ConsultHora;
      TextView ConsultHora = ViewBindings.findChildViewById(rootView, id);
      if (ConsultHora == null) {
        break missingId;
      }

      id = R.id.ConsultMarca;
      TextView ConsultMarca = ViewBindings.findChildViewById(rootView, id);
      if (ConsultMarca == null) {
        break missingId;
      }

      id = R.id.ConsultModelo;
      TextView ConsultModelo = ViewBindings.findChildViewById(rootView, id);
      if (ConsultModelo == null) {
        break missingId;
      }

      id = R.id.ConsultPlaca;
      TextView ConsultPlaca = ViewBindings.findChildViewById(rootView, id);
      if (ConsultPlaca == null) {
        break missingId;
      }

      return new ItemBinding((CardView) rootView, ConsultData, ConsultHora, ConsultMarca,
          ConsultModelo, ConsultPlaca);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
